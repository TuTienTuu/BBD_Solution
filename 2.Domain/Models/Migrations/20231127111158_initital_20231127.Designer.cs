// <auto-generated />
using System;
using Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231127111158_initital_20231127")]
    partial class initital_20231127
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Entities.CodeLevel1Management", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CodeLevel1")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("CodeLevel1Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("CodeLevel1Lenght")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("CodeLevel1Managements", "dbo");
                });

            modelBuilder.Entity("Data.Entities.CodeLevel2Management", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CodeLevel1")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("CodeLevel2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("CodeLevel2Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("CodeLevel2Lenght")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDLevel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("CodeLevel2Managements", "dbo");
                });

            modelBuilder.Entity("Data.Entities.ConfigFee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DepreciationFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("DepreciationFeePerMachineDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("DepreciationFeePerMachineHours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ElectricFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ElectricFeePerMachine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaintainFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ManagerFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ManagerFeePerMachine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<decimal>("WorkshopRentalFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("WorkshopRentalFeePerMachine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("ConfigFees", "Quotation");
                });

            modelBuilder.Entity("Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IdentitDated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOff")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OffDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceIssued")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemporaryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Data.Entities.EmployeeRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("Data.Entities.MachineConfig", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Change")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ChangeRoll")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ChangeRoll_H")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ChangeSpec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("ChangeSpec_H")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("Color")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Compensation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("CostAllocationPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ElectricPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("HourlySalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("KWPerHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("MachineName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<int>("OperatorNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("OperatorSalary_1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("OperatorSalary_2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Power")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("Risk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Target")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("WhiteCarry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("MachineConfigs", "Quotation");
                });

            modelBuilder.Entity("Data.Entities.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<int>("MaterialTypeID")
                        .HasColumnType("int");

                    b.Property<string>("MaterialTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("ID");

                    b.ToTable("Materials", "Paper");
                });

            modelBuilder.Entity("Data.Entities.MateriaType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("ID");

                    b.ToTable("MaterialTypes", "Paper");
                });

            modelBuilder.Entity("Data.Entities.Paper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Characteristic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Core")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("GlueID")
                        .HasColumnType("int");

                    b.Property<string>("GlueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperTypeCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<int>("PaperTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PaperTypeMainCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaperTypeMainID")
                        .HasColumnType("int");

                    b.Property<string>("PaperTypeMainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperTypeName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Purpose")
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<string>("QuantitativePaper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoleBaseThick")
                        .HasColumnType("int");

                    b.Property<int>("SoleID")
                        .HasColumnType("int");

                    b.Property<string>("SoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoleThick")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurfaceThick")
                        .HasColumnType("int");

                    b.Property<int>("TotalThick")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Papers", "Paper");
                });

            modelBuilder.Entity("Data.Entities.PaperType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaperTypeCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("PaperTypeMainCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaperTypeMainID")
                        .HasColumnType("int");

                    b.Property<string>("PaperTypeMainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperTypeName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("ID");

                    b.ToTable("PaperTypes", "Paper");
                });

            modelBuilder.Entity("Data.Entities.PaperTypeMain", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaperTypeMainCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("PaperTypeMainName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("ID");

                    b.ToTable("PaperTypeMains", "Paper");
                });

            modelBuilder.Entity("Data.Entities.Sole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoleCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("SoleInfomation")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("ID");

                    b.ToTable("Soles", "Paper");
                });

            modelBuilder.Entity("Data.Entities.STA0010_Material_Master", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MATCD")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("MATGROUPCD")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<int>("UnitQty")
                        .HasColumnType("Int");

                    b.HasKey("ID");

                    b.ToTable("STA0010_Material_Masters", "BDST");
                });

            modelBuilder.Entity("Data.Entities.STA0020_Material_Supplier_LOTNO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("ExpiredDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<string>("ImportDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<double>("InEAQuantity")
                        .HasColumnType("Float");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasColumnType("CHAR(11)");

                    b.Property<string>("MatCD")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(Max)");

                    b.Property<string>("SupLOT")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("TestDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<string>("TestResult")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<double>("UnitQuantity")
                        .HasColumnType("Float");

                    b.HasKey("ID");

                    b.ToTable("STA0020_Material_Supplier_LOTNOs", "BDST");
                });

            modelBuilder.Entity("Data.Entities.STB0010_BARCODE_Printing_Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ENDNO")
                        .HasColumnType("INT");

                    b.Property<string>("IDEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOTNO")
                        .IsRequired()
                        .HasColumnType("CHAR(11)");

                    b.Property<string>("MATCD")
                        .IsRequired()
                        .HasColumnType("CHAR(5)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<int>("STA0020_Material_Supplier_LotnoID")
                        .HasColumnType("INT");

                    b.Property<int>("STRNO")
                        .HasColumnType("INT");

                    b.HasKey("ID");

                    b.ToTable("STB0010_Material_Export_Trackings", "BDST");
                });

            modelBuilder.Entity("Data.Entities.UpdateDataPaperTracking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("ID");

                    b.ToTable("UpdateDataPaperTrackings", "Paper");
                });

            modelBuilder.Entity("Data.FunctionResult", b =>
                {
                    b.Property<bool?>("ResultBool")
                        .HasColumnType("bit");

                    b.Property<int?>("ResultNumber")
                        .HasColumnType("int");

                    b.Property<string>("ResultString")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("FunctionResults");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EmployeeClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("EmployeeLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("EmployeeRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("EmployeeUserTokens", (string)null);
                });

            modelBuilder.Entity("Models.Glue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlueCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlueName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Glues", "Paper");
                });
#pragma warning restore 612, 618
        }
    }
}
